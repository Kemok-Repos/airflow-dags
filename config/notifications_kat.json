{"1": {"message": "Notificacion de queries trabados", "tasks": [{"task_id": "Notificacion de queries trabados a DBAs", "type": "Telegram", "address": "674350416", "message_template": "<b>\ud83d\udea8  Alerta de queries trabados \ud83d\udea8</b>\n<b>{{ n_errores }} proceso encontrados y detenidos: </b>\n{% for item in errors %}\n<code> {{ item.database }}  {{ item.pid }} {{ item.start }} </code>\n{% endfor %}\n\nRealizar un diagnostico en la tabla timeout_processes en KAT dB y verificar Airflow.", "query_template": "WITH base AS (\nSELECT \n\tjsonb_build_object('database', database, 'pid', pid, 'start', start) AS errors\nFROM timeout_processes\nWHERE stop > (NOW() AT TIME ZONE 'CST' - '10 minutes'::interval)\n)\nSELECT \n\tjsonb_build_object('n_errores', COUNT(*), 'errors', array_agg(errors)) AS params\nFROM base\nHAVING COUNT(*) > 0\nLIMIT 1;\n", "params": null}], "branching_query": "SELECT DISTINCT\n\tdag_notification_tasks.task_id||' a '||dag_addresses.name AS task_id\nFROM dag_notification_tasks\nJOIN dag_notification_addresses ON dag_notification_tasks.id = dag_notification_addresses.id_task\nJOIN dag_addresses ON dag_notification_addresses.id_address = dag_addresses.id\nWHERE dag_notification_tasks.id = 1\n\tAND (SELECT pid AS mensajes FROM timeout_processes WHERE stop > (NOW() AT TIME ZONE 'CST' - '10 minutes'::interval) LIMIT 1) IS NOT NULL"}}